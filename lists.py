# Теперь передём к спискам
# Списки это определённое место, для хранения раличных значений, список создается использование квадратными скобками
# Можно просто указать квадратные скобки [], так и квадратные скобки со значениями внутри них [1, 2, 3, 4, 5]
# Пример 1

x = []
y = [1, 2, 3, 4, 5, 6, 7, 8]
print(x)
print(y)

# В чём отличие от диапозона, отличие в том, что в списках мы можем хранить не только целые числа, но также и
# дробные, строки и прочее.
# Пример 2
x = [1, 2, 3.0, "привет"]
print(x)

# Также к списку можно обраться, указав название списка, затем в квадратных скобках указать индекс,
# индекс это номер элемента в списке, отчёт начинается с 0, если у нас список из 10 эллементов, то чтобы получить
# первый эллемент в списке надо указать в [0], а чтобы последний [9]
# Пример получения значения, здесь я из списка x, который я создал выше 
print(x[3])

# Также из в список можно добавлять и удалять значения, добавить значение можно при помощи метода append у списка
# Сначала указываешь название списка к примеру х, затем через .append Пример 3.
# кратно, что такое метод, всё в питоне является объектом и у каждого объекта они вызываются через .название метода
z = [1, 2, 3]
print(z)
#добавление в список
z.append(4)
print(z) 

# Удалить список можно двумя способами при помощи метода remove, pop. Их отличие в том,
# что remove просто удаляет эллемент по индекс, а pop, возвразяет этот эллемент, тоесть удалив элемент при помощи pop
# мы можем записать его в переменную
# Пример 4
print(z)
z.remove(2)
print("список после удаления", z)
deleted_element = z.pop(0)
print("список после удаления 0 элеметна", z)
print("0 элемент, который был записан в переменную deleted_item", deleted_element)

#И также по спискам можно проходиться при помощи for, тогда в качестве i, ты будешь получать нужный тебе эллемент
print("вывод каждого эллемента списка x")
for i in x:
    print(i)

# Размер листа можно узнать при помощи функции len(x), где x - это лист    

print(x)
print("размер списка x:", len(x))